pool:
  vmImage: 'windows-latest'

trigger:
  branches:
    include:
    - main
    - feature/*

name: 1.0.$(Build.BuildId)

stages:
- stage: Build_winx64
  displayName: 'Build win-x64'
  jobs:
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Publish win-x64'
      inputs:
        command: publish
        publishWebProjects: false
        projects: '$(system.teamProject).csproj'
        zipAfterPublish: false
        modifyOutputPath: false
        arguments: '-r win-x64 --output $(Build.ArtifactStagingDirectory) -p:Version=$(Build.BuildNumber)'

    - task: PowerShell@2
      displayName: 'Rename Build Artifacts'
      inputs:
        targetType: 'inline'
        script: 'Get-ChildItem ./VSLauncher.exe | Rename-Item -NewName {$_.basename + "_x64" + $_.extension }'
        workingDirectory: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'win-x64'   

- stage: Build_winx86
  displayName: 'Build win-x86'
  dependsOn: []
  jobs:
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Publish win-x86'
      inputs:
        command: publish
        publishWebProjects: false
        projects: '$(system.teamProject).csproj'
        zipAfterPublish: false
        modifyOutputPath: false
        arguments: '-r win-x86 --output $(Build.ArtifactStagingDirectory) -p:Version=$(Build.BuildNumber)'

    - task: PowerShell@2
      displayName: 'Rename Build Artifacts'
      inputs:
        targetType: 'inline'
        script: 'Get-ChildItem ./VSLauncher.exe | Rename-Item -NewName {$_.basename + "_x86" + $_.extension }'
        workingDirectory: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'win-x86'   

- stage: Build_osxx64
  displayName: 'Build osx-x64'
  dependsOn: []
  jobs:
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Publish osx-x64'
      inputs:
        command: publish
        publishWebProjects: false
        projects: '$(system.teamProject).csproj'
        zipAfterPublish: false
        modifyOutputPath: false
        arguments: '-r osx-x64 --output $(Build.ArtifactStagingDirectory) -p:PublishReadyToRun=false -p:Version=$(Build.BuildNumber)'

    - task: PowerShell@2
      displayName: 'Rename Build Artifacts'
      inputs:
        targetType: 'inline'
        script: 'Get-ChildItem ./VSLauncher | Rename-Item -NewName {$_.basename + "_osx-x64" + $_.extension }'
        workingDirectory: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'osx-x64'

- stage: CreateGitHubRelease
  displayName: Create GitHub Release
  dependsOn:
    - Build_winx64
    - Build_winx86
    - Build_osxx64
  jobs:
  - job: Release
    steps:
    - checkout: none

    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        path: $(Pipeline.Workspace)

    - task: GitHubRelease@1
      displayName: 'Create GitHub Release'
      inputs:
        gitHubConnection: 'GitHub Release'
        repositoryName: sboulema/VSLauncher
        action: Create
        title: 'v$(Build.BuildNumber)'
        assets: '$(Pipeline.Workspace)/**/VSLauncher*'
        tagSource: 'userSpecifiedTag'
        tag: $(Build.BuildNumber)